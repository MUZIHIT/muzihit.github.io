<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2025NepCTF</title>
      <link href="/2025/08/01/2025NepCTF/"/>
      <url>/2025/08/01/2025NepCTF/</url>
      
        <content type="html"><![CDATA[<p>开始复现</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> all </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CADE-Detecting and Explaining Concept Drift Samples for Security Applications</title>
      <link href="/2024/07/09/CADE/"/>
      <url>/2024/07/09/CADE/</url>
      
        <content type="html"><![CDATA[<p>发表会议：USENIXSec 2021</p><p><strong>代码地址</strong>：<a href="https://github.com/whyisyoung/CADE">https://github.com/whyisyoung/CADE</a></p><h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>为了对抗概念漂移的问题，设计一个模型CADE来实现对漂移样本的检测以及分类。<br><img src="/../static/img/CADE-1.png" alt="[Pasted image 20240709100037.png]"></p><p>检测偏离现有类的漂移样本<br>提供解释来解释检测到的漂移。<br>漂移检测模块：负责监测输入原分类模型中的数据是否存在问题，即检测漂移数据<br>解释漂移模块：训练了一个基于距离的语义解释函数来对发现的漂移数据进行解释，并未是否需要对模型进行再训练提供一个参考。</p><p>由于概念漂移，部署基于机器学习的安全应用可能非常具有挑战性。无论是恶意软件分类、入侵检测，还是在线滥用检测，基于学习的模型都是在”封闭世界”假设下工作的，希望测试数据的分布与训练数据的分布大致匹配。然而，模型部署的环境通常是随时间动态变化的。这种变化既可能包括良性玩家的有机行为变化，也可能包括攻击者的恶意突变和适应。因此，测试数据分布正在从原始训练数据中转移，这可能会导致模型出现严重的故障。为了解决概念漂移问题，大多数基于学习的模型需要定期重新训练。然而，再训练往往需要标注大量的新样本(代价昂贵)。更重要的是，也很难确定何时应该重新训练模型。延迟再训练会使过时的模型容易受到新的攻击。我们设想，对抗概念漂移需要建立一个监控系统来检查输入数据流和训练数据(和&#x2F;或当前分类器)之间的关系。高层思路如图1所示。当原始分类器在生产空间中工作时，另一个系统应该周期性地检查分类器的合格程度，以便对输入的数据样本进行决策。检测模块(∂)可以过滤正在远离训练空间的漂移样本。更重要的是，为了推理(例如,攻击者突变、有机行为改变、先前未知的系统漏洞等)漂移的原因，我们需要一种解释方法(∑)将检测决策与语义有意义的特征联系起来。这两个模块对于开放世界的恶意软件检测是非常重要的。<br>之前的工作已经探索了通过直接检查原始分类器的预测置信度来检测漂移样本。置信度得分较低，说明进入的样本为漂移样本。然而，这个置信度评分是在假设所有类别已知(封闭世界)的基础上计算得到的概率(总和达到1.0)。一个不属于任何已有类的漂移样本可能被分配到一个高置信度的错误类(得到了已有工作的验证)中。最近的一项工作提出了计算传入样本与每个现有类之间的非一致性度量来确定适应度的想法。这种不一致性度量是基于一个距离函数来计算的，以量化这种不一致性。</p><h2 id="本文方法"><a href="#本文方法" class="headerlink" title="本文方法"></a>本文方法</h2><p>在本文中，我们提出了一种新的方法来检测漂移样本，并结合一种新的方法来解释检测决策。总的来说，我们构建了一个名为CADE的系统，简称为”用于漂移检测和解释的对比自编码器”。关键的挑战是推导出一个有效的距离函数来度量样本的相异性。我们利用对比学习的思想，根据已有的标签，从已有的训练数据中学习距离函数，而不是任意挑选距离函数。给定原始分类器的训练数据(多个类别)，我们将训练样本映射到一个低维隐空间。通过对比样本学习映射函数，扩大不同c的样本之间的距离<br>为了解释一个漂移的样本，我们识别了一组小的重要特征，这些特征将这个样本与它最近的类区分开来。一个关键的观察是，传统的(监督的)解释方法并不能很好地解释。其启示在于，有监督的解释方法要求两类(漂移样本和已有类)都有足够的样本来估计其分布。然而，由于漂移样本位于训练分布之外的稀疏空间，这一要求很难满足。相反，我们发现基于距离变化，即导致漂移样本与其最近类之间距离变化最大的特征来推导解释更有效。</p><p>在多类分类设置中，主要存在两类概念漂移。A型：引入新类：漂移样本来自训练数据集中不存在的新类。因此，原先训练好的分类器无法对漂移样本进行分类；B型：类内进化：漂移样本仍来自已有的类，但其行为模式与训练数据集中存在明显差异。在这种情况下，原始分类器很容易在这些漂移样本上出错。在本文中，我们主要关注Type A概念漂移，即在多类环境中引入一个新类。以恶意软件分类为例，我们的目标是检测和解释来自先前看不到的恶意软件家族的漂移样本。从本质上讲，漂移样本是训练数据中所有现有类的分布外样本。</p><p>我们认为预测概率在我们的问题情境中不太可能有效。原因是这个概率反映了对现有类(例如,样本在A类中的拟合情况要好于B类)的相对适应度。如果样本来自一个全新的类(既不是A类或者B )，预测概率可能会被极大地误导。许多先前的研究(例如,将错误的类与高概率相关联)。从根本上说，预测概率仍然继承了分类器的”封闭世界假设”，因此不适合检测漂移样本。</p><p>与预测概率相比，一个更有前途的方向是直接评估样本对给定类的拟合度。其思想是，与评估样本在A类中是否比B类更好不同，我们评估该样本在A类中与A类中其他训练样本相比的拟合程度。例如，自动编码器可以根据重构误差来评估样本对给定分布的拟合程度。然而，作为一种无监督方法，自动编码器在忽略标签(见第4节)的情况下，很难学习到训练分布的准确表示。在最近的一项工作中，若尔达内等人引入了一个名为Transcend的系统。它将一种”不符合度量”定义为适应度评价。Transcend使用一个可信度p值来量化测试样本xxx与共享同一类别的训练样本的相似程度。p是该类别中的样本与xxx中的其他样本至少不相似的比例。虽然这种度量可以准确地指出漂移的样本，但这样的系统高度依赖于对”相异性”的良好定义。</p><p>在高层，我们首先使用对比学习来学习训练数据的压缩表示。对比学习的一个关键好处是，相比于无监督方法，如自编码器和主成分分析( Principal Component Analysis，PCA ) ，它可以利用现有的标签来获得更好的性能。这使得我们可以从训练数据中学习一个距离函数来检测漂移样本。对于解释模块，我们将描述一个基于距离的解释公式来应对上述挑战。</p><p>解释模块旨在识别驱动测试样本远离现有类的最重要特征。具体来说，给定一个漂移样本xt，以及它在训练集中的最近类yt，我们想找出一个小的特征集合，使得xt成为类yt的离群点。为了实现这一目标，一个本能的反应是将其转换为一个监督学习模型的解释问题，这是一个很好的研究领域。由于离群空间的高度稀疏性，我们发现很难移动一个漂移样本来跨越决策边界，从而无法得出有意义的解释。受此启发，我们设计了一种新的针对漂移检测的解释方法，该方法解释了漂移样本与类内样本之间的距离，而不是决策边界。<br><img src="/../static/img/CADE-2.png" alt="[Pasted image 20240709104648.png]"><br>我们提出了一种新的方法，通过解释距离(即图3中的红色箭头)来识别重要特征。与基于决策边界进行决策的有监督分类器不同，漂移检测模型根据样本到质心的距离进行决策。因此，我们的目标是找到一组有助于将漂移样本xt移动到最近的质心yt的原始特征。通过这样的设计，我们不再需要强迫xt跨越边界，这是难以实现的。相反，我们对原始特征进行扰动，观察潜在空间中的距离变化。要实现这一想法，首先需要设计一个特征扰动机制。现有的大多数扰动方法都是针对图像设计的，其特点是数值性。在我们的案例中，xxxt中的特征可以是数值型的，也可以是分类型的，因此直接应用现有的方法会产生定义不明确的特征值。为了确保扰动对数值特征和类别特征都有意义，我们提出用参考训练样本中对应特征的值替换其特征值来扰动xt。<br><img src="/../static/img/CADE-3.png" alt="[Pasted image 20240709105344.png]"><br>同时也有助于保证扰动后的样本向着质心的粗略方向移动。与之前一样，扰动是在原始特征空间中进行的，其中特征具有语义含义。</p><h2 id="贡献"><a href="#贡献" class="headerlink" title="贡献"></a>贡献</h2><p>本文的主要贡献有三：<br>提出了CADE来补充现有的基于监督学习的安全应用，以对抗概念漂移。我们介绍了一种基于对比表示学习的有效方法来检测漂移样本。<br>我们说明了监督解释方法在解释离群样本方面的局限性，并针对这种情况介绍了一种基于距离的解释方法。<br>我们通过两个应用对所提出的方法进行了广泛的评估。我们对一家证券公司的初步测试表明，CADE是有效的。我们在此发布了CADE的代码1，以支持未来的研究。</p>]]></content>
      
      
      <categories>
          
          <category> 科研 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 未知攻击检测 </tag>
            
            <tag> attack detect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwn-tricks</title>
      <link href="/2024/07/01/pwn-tricks/"/>
      <url>/2024/07/01/pwn-tricks/</url>
      
        <content type="html"><![CDATA[<p>该文档主要收录一些我觉得讲的很好的一些关于pwn的trick<br />（为便于学习参与学习的大家可以在最后自增一列用于标记自己的学习进度，记录一下自己哪些是看过的了hhhhhhhhhhhhhhhhh）<br /></p><table><thead><tr><th>tick name</th><th>url</th><th>keyboard看过了？</th></tr></thead><tbody><tr><td>堆漏洞挖掘中malloc_consolidate与FASTBIN_CONSOLIDATION_THRESHOLD</td><td><a href="https://blog.csdn.net/qq_41453285/article/details/97627411">https://blog.csdn.net/qq_41453285&#x2F;article&#x2F;details&#x2F;97627411</a></td><td>1</td></tr><tr><td>Glibc PWN“堆风水”应用详解</td><td><a href="https://www.freebuf.com/vuls/235626.html">https://www.freebuf.com/vuls/235626.html</a></td><td>1</td></tr><tr><td>关于fastbin合并问题的研究</td><td><a href="https://bbs.kanxue.com/thread-257742.htm">https://bbs.kanxue.com/thread-257742.htm</a></td><td>1</td></tr><tr><td>PWN题目中malloc_consolidate()利用浅析</td><td><a href="https://juejin.cn/post/6844903816031125518">https://juejin.cn/post/6844903816031125518</a></td><td>1</td></tr><tr><td>the house of rabbit（超详细）</td><td><a href="https://bbs.kanxue.com/thread-280246.htm">https://bbs.kanxue.com/thread-280246.htm</a></td><td>0</td></tr><tr><td>堆喷射技术入门</td><td><a href="https://segmentfault.com/a/1190000044165958">https://segmentfault.com/a/1190000044165958</a></td><td>1</td></tr><tr><td>堆喷思想在glibc pwn中的应用</td><td><a href="https://xz.aliyun.com/t/7189?time__1311=n4+xnD0GDtKx9lDuDBqroGktkGQG8RSQmYeD&alichlgref=https://www.freebuf.com/">https://xz.aliyun.com/t/7189?time__1311&#x3D;n4%2BxnD0GDtKx9lDuDBqroGktkGQG8RSQmYeD&amp;alichlgref&#x3D;https%3A%2F%2Fwww.freebuf.com%2F</a></td><td>1</td></tr><tr><td>Heap Spray：高危漏洞的垫脚石</td><td><a href="https://www.cnblogs.com/Fang3s/articles/3911561.html">https://www.cnblogs.com/Fang3s/articles/3911561.html</a></td><td>1</td></tr><tr><td>TSCTF2019 薛定谔的堆块-HeapSpray</td><td><a href="https://pig-007.github.io/2021/08/18/TSCTF2019%20%E8%96%9B%E5%AE%9A%E8%B0%94%E7%9A%84%E5%A0%86%E5%9D%97-HeapSpray/#2-%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%EF%BC%9A">https://pig-007.github.io/2021/08/18/TSCTF2019%20%E8%96%9B%E5%AE%9A%E8%B0%94%E7%9A%84%E5%A0%86%E5%9D%97-HeapSpray/#2-%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%EF%BC%9A</a></td><td>1,考虑复现</td></tr><tr><td>IO_FILE利用：利用_IO_2_1_stdout泄露libc</td><td><a href="https://blog.csdn.net/qq_41202237/article/details/113845320">https://blog.csdn.net/qq_41202237&#x2F;article&#x2F;details&#x2F;113845320</a></td><td>1</td></tr><tr><td>House of pig 原理详解&amp;实战（高版本IO_FILE）–比较复杂的攻击</td><td><a href="http://t.csdnimg.cn/axITU">http://t.csdnimg.cn/axITU</a></td><td>0，考虑复现</td></tr><tr><td>Tcache Stashing Unlink Attack 原理详解</td><td><a href="http://t.csdnimg.cn/vIJJP">http://t.csdnimg.cn/vIJJP</a></td><td>1</td></tr><tr><td>Heap Exploit 2.31</td><td><a href="https://github.com/StarCross-Tech/heap_exploit_2.31">https://github.com/StarCross-Tech/heap_exploit_2.31</a></td><td>0考虑复现</td></tr><tr><td>glibc-2.31中的tcache stashing unlink与large bin attack</td><td><a href="http://t.csdnimg.cn/01drX">http://t.csdnimg.cn/01drX</a></td><td>1</td></tr><tr><td>house of  banana</td><td><a href="https://www.anquanke.com/post/id/222948#h3-5">https://www.anquanke.com/post/id/222948#h3-5</a></td><td>0</td></tr><tr><td>浅入研究 tcache_perthread_struct</td><td><a href="https://blog.csdn.net/qq_29912475/article/details/134978851">https://blog.csdn.net/qq_29912475&#x2F;article&#x2F;details&#x2F;134978851</a></td><td>1</td></tr><tr><td>通过mmap&amp;mprotect来绕过nx</td><td><a href="http://t.csdnimg.cn/WgOng">http://t.csdnimg.cn/WgOng</a></td><td>1</td></tr><tr><td>house of fmt 非栈上的fmt</td><td><a href="https://www.freebuf.com/vuls/284210.html">https://www.freebuf.com/vuls/284210.html</a></td><td>1</td></tr><tr><td>[CTF]PWN–非栈上格式化字符串漏洞</td><td><a href="http://t.csdnimg.cn/4sILP">http://t.csdnimg.cn/4sILP</a></td><td>1</td></tr><tr><td>[CTF]PWN–手搓格式化字符串漏洞</td><td><a href="https://blog.csdn.net/2301_79880752/article/details/136178764?spm=1001.2014.3001.5501">https://blog.csdn.net/2301_79880752&#x2F;article&#x2F;details&#x2F;136178764?spm&#x3D;1001.2014.3001.5501</a></td><td>1</td></tr><tr><td>house of apple 1-2-3</td><td><a href="https://bbs.kanxue.com/thread-273418.htm">https://bbs.kanxue.com/thread-273418.htm</a></td><td>1</td></tr><tr><td><a href="https://www.anquanke.com/post/id/235598">house of kiwi</a></td><td><a href="https://www.anquanke.com/post/id/235598">house of kiwi</a></td><td>1</td></tr><tr><td><a href="https://www.anquanke.com/post/id/260614">house of emma</a></td><td><a href="https://www.anquanke.com/post/id/260614">house of emma</a></td><td>1</td></tr><tr><td><a href="https://www.anquanke.com/post/id/242640">house of pig</a></td><td><a href="https://www.anquanke.com/post/id/242640">house of pig</a></td><td>1</td></tr><tr><td>House of cat新型glibc中IO利用手法解析 &amp;&amp; 第六届强网杯House of cat详解</td><td><a href="https://bbs.kanxue.com/thread-273895.htm">https://bbs.kanxue.com/thread-273895.htm</a></td><td>0</td></tr><tr><td>堆利用详解：the house of storm</td><td><a href="https://bbs.kanxue.com/thread-280333.htm">https://bbs.kanxue.com/thread-280333.htm</a></td><td>0</td></tr><tr><td>深入理解Pwn_IO_FILE及相关赛题</td><td><a href="https://bbs.kanxue.com/thread-279380.htm">https://bbs.kanxue.com/thread-279380.htm</a></td><td>1</td></tr><tr><td>深入理解Pwn_Heap及相关例题</td><td><a href="https://bbs.kanxue.com/thread-278871.htm">https://bbs.kanxue.com/thread-278871.htm</a></td><td>1</td></tr><tr><td>Tcache安全机制及赛题详细解析(gundam &amp;&amp; House of Atum)</td><td><a href="https://bbs.kanxue.com/thread-278105.htm">https://bbs.kanxue.com/thread-278105.htm</a></td><td>0</td></tr><tr><td>第七届“湖湘杯” House _OF _Emma &#124; 设计思路与解析</td><td><a href="https://www.anquanke.com/post/id/260614">https://www.anquanke.com/post/id/260614</a></td><td>1</td></tr><tr><td>House OF Kiwi</td><td><a href="https://www.anquanke.com/post/id/235598">https://www.anquanke.com/post/id/235598</a></td><td>1</td></tr><tr><td>多手法联合IO利用之House of pig 学习利用</td><td><a href="https://xz.aliyun.com/t/12916?time__1311=mqmhqIx+xkGNDQtPBKPAKY0KD=WDtes3C4D&alichlgref=https://xz.aliyun.com/t/12934?time__1311=mqmhqIx%252Bxfx0hxBqDTWxUE%253Dx9DAOq6rCoD&alichlgref=https%253A%252F%252Fcn.bing.com%252F">https://xz.aliyun.com/t/12916?time__1311&#x3D;mqmhqIx%2BxkGNDQtPBKPAKY0KD%3DWDtes3C4D&amp;alichlgref&#x3D;https%3A%2F%2Fxz.aliyun.com%2Ft%2F12934%3Ftime__1311%3DmqmhqIx%252Bxfx0hxBqDTWxUE%253Dx9DAOq6rCoD%26alichlgref%3Dhttps%253A%252F%252Fcn.bing.com%252F</a></td><td>1</td></tr><tr><td>glibc 2.31 pwn——house of pig原题分析与示例程序</td><td><a href="http://t.csdnimg.cn/BiNVQ">http://t.csdnimg.cn/BiNVQ</a></td><td>1</td></tr><tr><td>i春秋2020新春战役PWN之BFnote (修改TLS结构来bypass canary)</td><td><a href="http://t.csdnimg.cn/dC98r">http://t.csdnimg.cn/dC98r</a></td><td>1</td></tr><tr><td>roarctf 2020 PWN 2a1—虚表指针加密问题</td><td><a href="https://bbs.kanxue.com/thread-264469.htm">https://bbs.kanxue.com/thread-264469.htm</a></td><td>0</td></tr><tr><td>新版本glibc下的IO_FILE攻击</td><td><a href="https://www.anquanke.com/post/id/216290">https://www.anquanke.com/post/id/216290</a></td><td>0</td></tr><tr><td>通过LIBC基址来爆破TLS</td><td><a href="https://blog.wjhwjhn.com/posts/%e9%80%9a%e8%bf%87libc%e5%9f%ba%e5%9d%80%e6%9d%a5%e7%88%86%e7%a0%b4tls/">https://blog.wjhwjhn.com/posts/%e9%80%9a%e8%bf%87libc%e5%9f%ba%e5%9d%80%e6%9d%a5%e7%88%86%e7%a0%b4tls/</a></td><td>0</td></tr><tr><td>从两道题目学习 exit_hook</td><td><a href="https://zhuanlan.zhihu.com/p/576942474">https://zhuanlan.zhihu.com/p/576942474</a></td><td>1</td></tr><tr><td>malloc_printerr劫持</td><td><a href="https://bbs.kanxue.com/thread-272471.htm#msg_header_h1_3">https://bbs.kanxue.com/thread-272471.htm#msg_header_h1_3</a></td><td>1</td></tr><tr><td>house of husk</td><td><a href="https://www.anquanke.com/post/id/202387">https://www.anquanke.com/post/id/202387</a></td><td>1</td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr><tr><td><br /></td><td></td><td><br /></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pwn </tag>
            
            <tag> trick </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/01/hello-world/"/>
      <url>/2024/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
